{
	"nodes":[
		{"type":"text","file":"Blueprints/Utilities/Task-Automation/Webcam-Capture.md","text":"## [Webcam-Capture](Webcam-Capture)\nThis script takes a snaptshot using the webcam.\n\n```python\nimport cv2, time\ncap = cv2.VideoCapture(int(\"\" or 0))\ncap.set(cv2.CAP_PROP_FRAME_WIDTH, int(\"\" or 1920))\ncap.set(cv2.CAP_PROP_FRAME_HEIGHT, int(\"\" or 1080))\ntime.sleep(1)\nret, frame = cap.read()\ncap.release()\nassert frame is not None and frame.any(), \"Cam busy or invalid.\"\ncv2.imwrite(r\"Prototypes/Products/last-doc-capture.png\", frame)\n```","url":"","id":"bef5378a768d5fb8","x":-820,"y":-260,"width":700,"height":440,"color":"4"},
		{"type":"file","file":"Prototypes/Products/last-doc-capture.png","text":"","url":"","id":"2a88c605dcd18d9c","x":131,"y":-180,"width":400,"height":225,"color":"4"},
		{"type":"text","file":"Blueprints/Utilities/Computer-Vision/Aruco-Detector.md","text":"## [Aruco-Detector](Aruco-Detector)\nSee if this works better:\nhttps://pyimagesearch.com/2020/12/21/detecting-aruco-markers-with-opencv-and-python/\n\nCurrently...\n\n```python\nimport cv2\nimport cv2.aruco as aruco\n\n# Load the image\nimg = cv2.imread('Prototypes/Products/last-doc-capture.png')\n\n# Define the Aruco dictionary to be used\naruco_dict = aruco.getPredefinedDictionary(aruco.DICT_4X4_100)\n\n# Detect the markers in the image\ncorners, ids, rejectedImgPoints = aruco.detectMarkers(img, aruco_dict)\n\n# If any markers are detected, label them in the image\nif len(corners) > 0:\n    # Draw the detected markers and label them with their IDs\n    img_with_markers = aruco.drawDetectedMarkers(img, corners, ids)\n    for i in range(len(ids)):\n        c = corners[i][0]\n        cv2.putText(img_with_markers, str(ids[i][0]), (c[0], c[1]), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2, cv2.LINE_AA)\n        \n    # Show the image with the detected markers\n    cv2.imshow('Image with Aruco markers', img_with_markers)\n    cv2.waitKey(0)\nelse:\n    print('No markers detected in the image')\n```\n> No markers detected in the image","url":"","id":"493eaa81d2c4de43","x":148,"y":176,"width":692,"height":864,"color":"4"},
		{"type":"file","file":"Prototypes/Products/edited-screenshot.png","text":"","url":"","id":"7917424230736785","x":-1025,"y":337,"width":1001,"height":563,"color":"4"},
		{"type":"text","file":"Blueprints/Utilities/Computer-Vision/Aruco-Generator.md","text":"## [Aruco-Generator](Aruco-Generator)\n```python\nimport cv2\nimport numpy as np\nimport cv2.aruco as aruco\n\nsize = int(\"\" or 200)\nmarker_id = int(\"\" or 1)\naruco_dict = aruco.getPredefinedDictionary(aruco.DICT_4X4_50)\nmarkers = np.zeros((size, size), dtype=np.uint8)\nmarkers = aruco.drawMarker(dictionary, marker_id, size, markers, 1)\ncv2.imwrite(\"Prototypes/Products/aruco-marker.png\", markers)\n```\n> module 'cv2.aruco' has no attribute 'drawMarker'\n","url":"","id":"6303f40ce4233aaa","x":-870,"y":-900,"width":690,"height":480,"color":"1"},
		{"type":"file","file":"Prototypes/Products/aruco-marker.png","text":"","url":"","id":"d0790cb9752ba1c2","x":131,"y":-760,"width":399,"height":288,"color":"4"}
	],
	"edges":[
		{"id":"66d91e6d880d6436","fromNode":"bef5378a768d5fb8","fromSide":"right","toNode":"2a88c605dcd18d9c","toSide":"left"},
		{"id":"2e48d43b37c6930e","fromNode":"2a88c605dcd18d9c","fromSide":"bottom","toNode":"493eaa81d2c4de43","toSide":"top"},
		{"id":"48cf312a116ef4ca","fromNode":"493eaa81d2c4de43","fromSide":"left","toNode":"7917424230736785","toSide":"right"},
		{"id":"738f686b2eb4e00c","fromNode":"6303f40ce4233aaa","fromSide":"right","toNode":"d0790cb9752ba1c2","toSide":"left"}
	]
}